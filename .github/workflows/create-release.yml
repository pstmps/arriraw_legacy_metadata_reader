name: Create release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Get the version
      id: get_version
      #run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Get the upload URL
      id: get_upload_url
      run: echo "upload_url=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_OUTPUT

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: pyinstaller cli-macos-x86.spec
            OUT_FILE_NAME: cli-macos-x86
            ASSET_MIME: application/x-mach-binary
          # - os: macos-latest
          #   TARGET: macos-latest-xlarge
          #   CMD_BUILD: pyinstaller cli-macos-arm64.spec
          #   OUT_FILE_NAME: cli-macos-arm64
          #   ASSET_MIME: application/x-mach-binary
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller cli-windows.spec
            OUT_FILE_NAME: cli-windows.exe
            ASSET_MIME: application/x-msdownload
          - os: ubuntu-latest
            TARGET: linux
            CMD_BUILD: pyinstaller cli-linux.spec
            OUT_FILE_NAME: cli-linux
            ASSET_MIME: application/x-executable
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.createrelease.outputs.release_upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}
